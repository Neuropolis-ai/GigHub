'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import Link from 'next/link'
import { Search, CheckCircle, Users, ExternalLink, Brain, Sparkles, TrendingUp, Clock, Bot, Zap, History, Star } from 'lucide-react'
import ServiceCard from '@/app/components/ServiceCard'
import { AIServiceWithCategory } from '@/lib/supabase'

const gptCapabilities = [
  {
    icon: Brain,
    title: "–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –ò–ò",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –æ–≥—Ä–æ–º–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö –¥–∞–Ω–Ω—ã—Ö"
  },
  {
    icon: Zap,
    title: "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ",
    description: "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ª–æ–≥–∏—á–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏"
  },
  {
    icon: Bot,
    title: "–ú—É–ª—å—Ç–∏–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å",
    description: "–†–µ—à–µ–Ω–∏–µ —à–∏—Ä–æ–∫–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ –∑–∞–¥–∞—á: –æ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–¥–∞ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
  },
  {
    icon: Sparkles,
    title: "–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏",
    description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∏–¥–µ–π –∏ —Ä–µ—à–µ–Ω–∏–π –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–¥–∞—á"
  }
]

const gptEvolution = [
  {
    version: "GPT-1 (2018)",
    parameters: "117M –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤",
    description: "–ü–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å, –¥–æ–∫–∞–∑–∞–≤—à–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞",
    achievements: ["–ë–∞–∑–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞", "–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"],
    icon: "üå±"
  },
  {
    version: "GPT-2 (2019)",
    parameters: "1.5B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤",
    description: "–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã–º –∏ —Å–≤—è–∑–Ω—ã–º —Ç–µ–∫—Å—Ç–∞–º",
    achievements: ["–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è", "–õ—É—á—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", "Zero-shot –∑–∞–¥–∞—á–∏"],
    icon: "üåø"
  },
  {
    version: "GPT-3 (2020)",
    parameters: "175B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤",
    description: "–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ—Ä—ã–≤ –≤ –ò–ò, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –¥–æ–æ–±—É—á–µ–Ω–∏—è",
    achievements: ["Few-shot –æ–±—É—á–µ–Ω–∏–µ", "–ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å", "–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥"],
    icon: "üå≥"
  },
  {
    version: "GPT-4 (2023)",
    parameters: "~1.7T –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤",
    description: "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º",
    achievements: ["–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ—Å—Ç—å", "–£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"],
    icon: "üèÜ"
  }
]

const topGPTServices = [
  {
    name: "ChatGPT",
    description: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π GPT-—Å–µ—Ä–≤–∏—Å –æ—Ç OpenAI. –î–æ—Å—Ç—É–ø–Ω—ã GPT-3.5 –∏ GPT-4 –º–æ–¥–µ–ª–∏ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á.",
    developer: "OpenAI",
    model: "GPT-4 / GPT-3.5",
    pricing: "Freemium",
    features: ["–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", "API", "–ü–ª–∞–≥–∏–Ω—ã", "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ"],
    url: "https://chat.openai.com",
    rating: 4.9,
    monthlyPrice: "$0-20",
    pros: ["–õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤", "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "–û–≥—Ä–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"],
    cons: ["–û—á–µ—Ä–µ–¥–∏ –≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏", "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"]
  },
  {
    name: "GPT-4 API",
    description: "–ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ GPT-4 —á–µ—Ä–µ–∑ API OpenAI –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
    developer: "OpenAI",
    model: "GPT-4",
    pricing: "Pay-per-use",
    features: ["REST API", "Streaming", "–§—É–Ω–∫—Ü–∏–∏", "Embeddings"],
    url: "https://platform.openai.com",
    rating: 4.8,
    monthlyPrice: "$0.03/1K —Ç–æ–∫–µ–Ω–æ–≤",
    pros: ["–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–∏–±–∫–æ—Å—Ç—å", "–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å", "–ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
    cons: ["–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–∞—Ö"]
  },
  {
    name: "AutoGPT",
    description: "–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ò–ò-–∞–≥–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ GPT-4, —Å–ø–æ—Å–æ–±–Ω—ã–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏.",
    developer: "Open Source",
    model: "GPT-4",
    pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    features: ["–ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å", "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–í–µ–±-–ø–æ–∏—Å–∫", "–§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"],
    url: "https://autogpt.net",
    rating: 4.4,
    monthlyPrice: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ + API",
    pros: ["–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å", "–û—Ç–∫—Ä—ã—Ç—ã–π –∫–æ–¥", "–°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏"],
    cons: ["–¢—Ä–µ–±—É–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π", "–ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º"]
  },
  {
    name: "GPT-3.5 Turbo",
    description: "–ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è GPT-3.5, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –¥–∏–∞–ª–æ–≥–æ–≤.",
    developer: "OpenAI",
    model: "GPT-3.5 Turbo",
    pricing: "Pay-per-use",
    features: ["–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å", "–ù–∏–∑–∫–∞—è —Ü–µ–Ω–∞", "–ß–∞—Ç-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "API"],
    url: "https://platform.openai.com",
    rating: 4.6,
    monthlyPrice: "$0.002/1K —Ç–æ–∫–µ–Ω–æ–≤",
    pros: ["–û—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π", "–î–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞", "–•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ"],
    cons: ["–£—Å—Ç—É–ø–∞–µ—Ç GPT-4", "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç"]
  },
  {
    name: "Bing Chat (GPT-4)",
    description: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ GPT-4 —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫–æ–≤–∏–∫ Bing —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤–µ–±-–ø–æ–∏—Å–∫–∞ –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
    developer: "Microsoft",
    model: "GPT-4",
    pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    features: ["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π GPT-4", "–í–µ–±-–ø–æ–∏—Å–∫", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
    url: "https://bing.com/chat",
    rating: 4.3,
    monthlyPrice: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    pros: ["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π GPT-4", "–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í–µ–±-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
    cons: ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã", "–ú–µ–Ω–µ–µ –≥–∏–±–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"]
  },
  {
    name: "Perplexity AI",
    description: "GPT-–º–æ–¥–µ–ª—å, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.",
    developer: "Perplexity AI",
    model: "GPT-4 / GPT-3.5",
    pricing: "Freemium",
    features: ["–ü–æ–∏—Å–∫ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏", "–ê–Ω–∞–ª–∏–∑", "Citations", "Pro –º–æ–¥–µ–ª–∏"],
    url: "https://perplexity.ai",
    rating: 4.5,
    monthlyPrice: "$0-20",
    pros: ["–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤", "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫", "–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"],
    cons: ["–§–æ–∫—É—Å —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ–∏—Å–∫–µ", "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"]
  }
]

const gptUseCases = [
  {
    title: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    description: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞, –æ—Ç–ª–∞–¥–∫–∞, code review –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
    tools: ["ChatGPT", "GPT-4 API", "GitHub Copilot"],
    icon: "üíª",
    examples: ["–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π", "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–æ–≤", "–ö–æ–¥-—Ä–µ–≤—å—é", "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API"],
    difficulty: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
  },
  {
    title: "–ö–æ–Ω—Ç–µ–Ω—Ç –∏ –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π, –ø–æ—Å—Ç–æ–≤ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö, email-—Ä–∞—Å—Å—ã–ª–æ–∫ –∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤",
    tools: ["ChatGPT", "GPT-3.5 Turbo", "Claude"],
    icon: "‚úçÔ∏è",
    examples: ["–°—Ç–∞—Ç—å–∏ –¥–ª—è –±–ª–æ–≥–∞", "–ü–æ—Å—Ç—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö", "Email-–∫–∞–º–ø–∞–Ω–∏–∏", "–ü—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã"],
    difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π"
  },
  {
    title: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑",
    description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º",
    tools: ["Perplexity AI", "ChatGPT", "GPT-4"],
    icon: "üîç",
    examples: ["–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞", "–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", "–ë–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç—ã", "–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"],
    difficulty: "–°—Ä–µ–¥–Ω–∏–π"
  },
  {
    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω—ã—Ö –∑–∞–¥–∞—á",
    tools: ["AutoGPT", "GPT-4 API", "LangChain"],
    icon: "ü§ñ",
    examples: ["–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ—Ä–∫—Ñ–ª–æ—É", "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", "–ê–≥–µ–Ω—Ç—ã"],
    difficulty: "–≠–∫—Å–ø–µ—Ä—Ç"
  }
]

const benefits = [
  {
    title: "–ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    description: "GPT –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤–µ–π—à–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
    icon: "üöÄ"
  },
  {
    title: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å",
    description: "–û–¥–Ω–∞ –º–æ–¥–µ–ª—å –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–∞–¥–∞—á: –æ—Ç —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –¥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
    icon: "üîß"
  },
  {
    title: "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ",
    description: "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –º–æ–¥–µ–ª–µ–π",
    icon: "üìà"
  },
  {
    title: "–û—Ç–∫—Ä—ã—Ç–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞",
    description: "–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –Ω–∞ –±–∞–∑–µ GPT-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    icon: "üåê"
  }
]

const faqData = [
  {
    question: "–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É GPT-3.5 –∏ GPT-4?",
    answer: "GPT-4 –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç GPT-3.5 –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –æ—Ç–≤–µ—Ç–æ–≤, –ª–æ–≥–∏–∫–µ –∏ –ø–æ–Ω–∏–º–∞—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. GPT-4 –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏–º–µ–µ—Ç –±–æ–ª—å—à–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (32K –ø—Ä–æ—Ç–∏–≤ 4K —Ç–æ–∫–µ–Ω–æ–≤) –∏ –ª—É—á—à–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ —Å–ª–æ–∂–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏. –û–¥–Ω–∞–∫–æ GPT-3.5 —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –∏ —Å—Ç–æ–∏—Ç –¥–µ—à–µ–≤–ª–µ."
  },
  {
    question: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GPT –±–µ—Å–ø–ª–∞—Ç–Ω–æ?",
    answer: "–î–∞! ChatGPT –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ GPT-3.5. Bing Chat –¥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ GPT-4 —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏. AutoGPT –±–µ—Å–ø–ª–∞—Ç–µ–Ω, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç API-–∫–ª—é—á OpenAI. –î–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—ã—á–Ω–æ –Ω—É–∂–Ω–∞ –ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞."
  },
  {
    question: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GPT –¥–ª—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö?",
    answer: "OpenAI –∑–∞—è–≤–ª—è–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π API –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±—É—á–µ–Ω–∏—è, –Ω–æ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —ç—Ç–æ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è. –î–ª—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è."
  },
  {
    question: "–ö–∞–∫–æ–π GPT-—Å–µ—Ä–≤–∏—Å –ª—É—á—à–µ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?",
    answer: "–î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ª—É—á—à–µ –≤—Å–µ–≥–æ GPT-4 —á–µ—Ä–µ–∑ ChatGPT Plus –∏–ª–∏ API. GitHub Copilot —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–æ–¥–∞. GPT-3.5 Turbo –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–æ–∏—Ç –¥–µ—à–µ–≤–ª–µ."
  },
  {
    question: "–ú–æ–∂–µ—Ç –ª–∏ GPT –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ?",
    answer: "GPT –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–≥–∏–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –Ω–µ –º–æ–∂–µ—Ç. GPT –ª—É—á—à–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–∫ –º–æ—â–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ø–æ–ª–Ω—è–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏."
  },
  {
    question: "–ö–∞–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö GPT-–º–æ–¥–µ–ª–µ–π?",
    answer: "–û—Å–Ω–æ–≤–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –º–æ–≥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –æ–±—ä–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∫—Ä–æ–º–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π), —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –≤—ã—Å–æ–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏."
  },
  {
    question: "–°—Ç–æ–∏—Ç –ª–∏ –∏–∑—É—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å GPT?",
    answer: "–ê–±—Å–æ–ª—é—Ç–Ω–æ! –£–º–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å GPT —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–∞–∂–Ω—ã–º –Ω–∞–≤—ã–∫–æ–º –≤–æ –º–Ω–æ–≥–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö. –≠—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ –±—É–¥—É—â–µ–µ, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ —Å–µ–π—á–∞—Å –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ä–∞–±–æ—Ç–µ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ."
  }
]

export default function GPTNeuralNetworksPage() {
  const [services, setServices] = useState<AIServiceWithCategory[]>([])
  const [loading, setLoading] = useState(true)
  const [searchTerm, setSearchTerm] = useState('')
  const [openFAQ, setOpenFAQ] = useState<number | null>(null)

  useEffect(() => {
    fetchGPTServices()
  }, [searchTerm])

  const fetchGPTServices = async () => {
    try {
      setLoading(true)
      const params = new URLSearchParams({
        page: '1',
        limit: '20',
        sort: 'bookmarks_count',
        order: 'desc'
      })

      if (searchTerm) params.append('search', searchTerm)

      const response = await fetch(`/api/ai-services?${params}`)
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö')

      const data = await response.json()
      setServices(data.data || [])
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error)
      setServices([])
    } finally {
      setLoading(false)
    }
  }

  return (
    <>
      {/* JSON-LD —Ä–∞–∑–º–µ—Ç–∫–∞ */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "WebPage",
            "name": "GPT –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ‚Äî –ø–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ ChatGPT –∏ GPT-–º–æ–¥–µ–ª—è–º",
            "description": "–ü–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ GPT –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º –∏ ChatGPT",
            "url": "https://gighub.ru/gpt-neural-networks",
            "mainEntity": {
              "@type": "FAQPage",
              "mainEntity": faqData.map((faq) => ({
                "@type": "Question",
                "name": faq.question,
                "acceptedAnswer": {
                  "@type": "Answer",
                  "text": faq.answer
                }
              }))
            }
          })
        }}
      />

      <div className="min-h-screen bg-background">
        {/* Breadcrumbs */}
        <nav className="container mx-auto px-6 py-4">
          <ol className="flex items-center space-x-2 text-sm text-text-secondary">
            <li><Link href="/" className="hover:text-accent-primary">–ì–ª–∞–≤–Ω–∞—è</Link></li>
            <li className="mx-2">/</li>
            <li><span className="text-text-primary">GPT –Ω–µ–π—Ä–æ—Å–µ—Ç–∏</span></li>
          </ol>
        </nav>

        {/* Hero Section */}
        <section className="relative overflow-hidden bg-gradient-to-br from-purple-50 via-white to-blue-50 pt-8">
          <div className="absolute inset-0 bg-grid-pattern opacity-5"></div>
          <div className="relative container mx-auto px-6 py-16">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center max-w-5xl mx-auto"
            >
              <div className="flex items-center justify-center gap-2 mb-6">
                <Brain className="w-8 h-8 text-purple-500" />
                <span className="text-purple-500 font-semibold">
                  GPT –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
                </span>
              </div>
              
              <h1 className="text-4xl md:text-6xl font-bold text-text-primary mb-6">
                <span className="text-gradient bg-gradient-to-r from-purple-500 to-blue-600 bg-clip-text text-transparent">GPT –Ω–µ–π—Ä–æ—Å–µ—Ç–∏</span> ‚Äî<br className="hidden md:block" />
                —Ä–µ–≤–æ–ª—é—Ü–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞
              </h1>
              
              <p className="text-xl text-text-secondary mb-8 leading-relaxed max-w-4xl mx-auto">
                –ü–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–º –º–æ–¥–µ–ª—è–º GPT: –æ—Ç ChatGPT –¥–æ AutoGPT. 
                –ò–∑—É—á–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è, —Å—Ä–∞–≤–Ω–∏—Ç–µ –≤–µ—Ä—Å–∏–∏ –∏ –Ω–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–µ GPT-—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á.
              </p>
              
              <div className="flex items-center justify-center gap-6 text-sm text-text-secondary mb-8">
                <div className="flex items-center gap-2">
                  <Brain className="w-4 h-4 text-purple-500" />
                  <span>–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –ò–ò</span>
                </div>
                <div className="flex items-center gap-2">
                  <Zap className="w-4 h-4 text-blue-500" />
                  <span>175B+ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</span>
                </div>
                <div className="flex items-center gap-2">
                  <Star className="w-4 h-4 text-yellow-500" />
                  <span>–¢–æ–ø-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è</span>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href="#services" className="inline-flex items-center px-8 py-4 bg-purple-500 text-white rounded-xl hover:bg-purple-600 transition-colors font-semibold">
                  –°–º–æ—Ç—Ä–µ—Ç—å GPT-—Å–µ—Ä–≤–∏—Å—ã
                </Link>
                <Link href="/ai-services" className="inline-flex items-center px-8 py-4 border-2 border-purple-500 text-purple-500 rounded-xl hover:bg-purple-500 hover:text-white transition-colors font-semibold">
                  –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
                </Link>
              </div>
            </motion.div>
          </div>
        </section>

        {/* GPT Evolution Timeline */}
        <section className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                <span className="text-purple-500">–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è</span> GPT
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –û—Ç –ø–µ—Ä–≤—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –¥–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ GPT-4
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {gptEvolution.map((version, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-gray-50 rounded-2xl p-6 text-center hover:shadow-lg transition-shadow"
                >
                  <div className="text-4xl mb-4">{version.icon}</div>
                  <h3 className="text-xl font-bold text-text-primary mb-2">
                    {version.version}
                  </h3>
                  <div className="text-sm font-medium text-purple-600 mb-3">
                    {version.parameters}
                  </div>
                  <p className="text-text-secondary mb-4 leading-relaxed text-sm">
                    {version.description}
                  </p>
                  <div className="space-y-1">
                    {version.achievements.map((achievement, idx) => (
                      <div key={idx} className="text-xs text-gray-600 bg-white rounded-lg px-2 py-1">
                        {achievement}
                      </div>
                    ))}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Benefits Section */}
        <section className="py-20 bg-gray-50">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç <span className="text-purple-500">GPT —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</span>?
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π GPT –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {benefits.map((benefit, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="text-center p-6"
                >
                  <div className="text-4xl mb-4">{benefit.icon}</div>
                  <h3 className="text-xl font-semibold text-text-primary mb-3">
                    {benefit.title}
                  </h3>
                  <p className="text-text-secondary leading-relaxed">
                    {benefit.description}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Top GPT Services Section */}
        <section className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –õ—É—á—à–∏–µ <span className="text-purple-500">GPT-—Å–µ—Ä–≤–∏—Å—ã</span> 2025
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–∞ –±–∞–∑–µ GPT –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
              {topGPTServices.map((service, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow border border-gray-100"
                >
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <h3 className="text-xl font-bold text-text-primary">
                        {service.name}
                      </h3>
                      <p className="text-sm text-gray-500">{service.developer}</p>
                    </div>
                    <div className="text-right">
                      <span className="px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-medium block mb-1">
                        {service.model}
                      </span>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        service.pricing === 'Freemium' 
                          ? 'bg-blue-100 text-blue-700'
                          : service.pricing === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'
                          ? 'bg-emerald-100 text-emerald-700'
                          : 'bg-orange-100 text-orange-700'
                      }`}>
                        {service.pricing}
                      </span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between mb-3">
                    <div className="flex items-center gap-2">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className={i < Math.floor(service.rating) ? 'text-yellow-400' : 'text-gray-300'}>‚òÖ</span>
                        ))}
                      </div>
                      <span className="text-sm text-gray-600">{service.rating}</span>
                    </div>
                    <span className="text-sm font-medium text-purple-600">
                      {service.monthlyPrice}
                    </span>
                  </div>
                  
                  <p className="text-text-secondary mb-4 leading-relaxed">
                    {service.description}
                  </p>
                  
                  <div className="flex flex-wrap gap-2 mb-4">
                    {service.features.map((feature, idx) => (
                      <span key={idx} className="px-2 py-1 bg-gray-100 text-gray-700 rounded-lg text-sm">
                        {feature}
                      </span>
                    ))}
                  </div>

                  <div className="space-y-3 mb-4">
                    <div>
                      <p className="text-sm font-medium text-green-600 mb-1">‚úÖ –ü–ª—é—Å—ã:</p>
                      <ul className="text-sm text-gray-600 space-y-1">
                        {service.pros.map((pro, idx) => (
                          <li key={idx}>‚Ä¢ {pro}</li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-red-600 mb-1">‚ùå –ú–∏–Ω—É—Å—ã:</p>
                      <ul className="text-sm text-gray-600 space-y-1">
                        {service.cons.map((con, idx) => (
                          <li key={idx}>‚Ä¢ {con}</li>
                        ))}
                      </ul>
                    </div>
                  </div>
                  
                  <a 
                    href={service.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex items-center gap-2 text-purple-500 hover:text-purple-600 font-medium"
                  >
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å <ExternalLink className="w-4 h-4" />
                  </a>
                </motion.div>
              ))}
            </div>

            <div className="text-center">
              <Link href="/ai-services" className="inline-flex items-center px-8 py-4 bg-purple-500 text-white rounded-xl hover:bg-purple-600 transition-colors font-semibold">
                –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
              </Link>
            </div>
          </div>
        </section>

        {/* Use Cases Section */}
        <section className="py-20 bg-gray-50">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ <span className="text-purple-500">GPT</span> –≤ —Ä–∞–±–æ—Ç–µ
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GPT-–º–æ–¥–µ–ª–µ–π –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {gptUseCases.map((useCase, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white rounded-2xl p-6 hover:shadow-lg transition-shadow"
                >
                  <div className="text-4xl mb-4">{useCase.icon}</div>
                  <h3 className="text-xl font-bold text-text-primary mb-3">
                    {useCase.title}
                  </h3>
                  <p className="text-text-secondary mb-4 leading-relaxed">
                    {useCase.description}
                  </p>
                  <div className="space-y-2 mb-4">
                    <div className="flex items-center justify-between">
                      <p className="text-sm font-medium text-gray-700">–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</p>
                      <span className={`px-2 py-1 rounded-lg text-xs font-medium ${
                        useCase.difficulty === '–ù–∞—á–∏–Ω–∞—é—â–∏–π' ? 'bg-green-100 text-green-700' :
                        useCase.difficulty === '–°—Ä–µ–¥–Ω–∏–π' ? 'bg-yellow-100 text-yellow-700' :
                        useCase.difficulty === '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π' ? 'bg-orange-100 text-orange-700' :
                        'bg-red-100 text-red-700'
                      }`}>
                        {useCase.difficulty}
                      </span>
                    </div>
                    <p className="text-sm font-medium text-gray-700">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:</p>
                    <div className="flex flex-wrap gap-2">
                      {useCase.tools.map((tool, idx) => (
                        <span key={idx} className="px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-medium">
                          {tool}
                        </span>
                      ))}
                    </div>
                  </div>
                  <div className="space-y-2">
                    <p className="text-sm font-medium text-gray-700">–ü—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á:</p>
                    <div className="grid grid-cols-1 gap-1">
                      {useCase.examples.map((example, idx) => (
                        <span key={idx} className="text-sm text-gray-600">‚Ä¢ {example}</span>
                      ))}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Services Catalog Section */}
        <section id="services" className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ö–∞—Ç–∞–ª–æ–≥ <span className="text-purple-500">GPT-—Å–µ—Ä–≤–∏—Å–æ–≤</span>
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –ù–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–π GPT-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á
              </p>
            </motion.div>

            {/* Search */}
            <div className="max-w-md mx-auto mb-12">
              <div className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ GPT-—Å–µ—Ä–≤–∏—Å–æ–≤..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-12 pr-4 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200"
                />
              </div>
            </div>

            {/* Services Grid */}
            {loading ? (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {[...Array(6)].map((_, index) => (
                  <div key={index} className="bg-white rounded-3xl shadow-lg p-6 animate-pulse">
                    <div className="h-48 bg-gray-200 rounded-xl mb-4"></div>
                    <div className="h-4 bg-gray-200 rounded mb-2"></div>
                    <div className="h-4 bg-gray-200 rounded w-3/4 mb-4"></div>
                    <div className="h-3 bg-gray-200 rounded mb-2"></div>
                    <div className="h-3 bg-gray-200 rounded w-2/3"></div>
                  </div>
                ))}
              </div>
            ) : services.length > 0 ? (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4, duration: 0.6 }}
                className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
              >
                {services.map((service, index) => (
                  <ServiceCard
                    key={service.id}
                    {...service}
                    index={index}
                  />
                ))}
              </motion.div>
            ) : (
              <div className="text-center py-20">
                <div className="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                  <Search className="w-12 h-12 text-gray-400" />
                </div>
                <h3 className="text-2xl font-bold text-text-primary mb-4">
                  –°–µ—Ä–≤–∏—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </h3>
                <p className="text-text-secondary mb-8 max-w-md mx-auto">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –ø–æ–ª–Ω–æ–º—É –∫–∞—Ç–∞–ª–æ–≥—É
                </p>
                <Link href="/ai-services" className="inline-flex items-center px-6 py-3 bg-purple-500 text-white rounded-xl hover:bg-purple-600 transition-colors">
                  –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                </Link>
              </div>
            )}
          </div>
        </section>

        {/* FAQ Section */}
        <section className="py-20 bg-gray-50">
          <div className="container mx-auto px-6 max-w-4xl">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –í–æ–ø—Ä–æ—Å—ã –æ <span className="text-purple-500">GPT</span>
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ GPT-–º–æ–¥–µ–ª—è—Ö –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
              </p>
            </motion.div>

            <div className="space-y-4">
              {faqData.map((faq, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden"
                >
                  <button
                    onClick={() => setOpenFAQ(openFAQ === index ? null : index)}
                    className="w-full px-8 py-6 text-left hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-inset"
                  >
                    <div className="flex items-center justify-between">
                      <h3 className="text-lg font-semibold text-text-primary pr-4">
                        {faq.question}
                      </h3>
                      <motion.div
                        animate={{ rotate: openFAQ === index ? 180 : 0 }}
                        transition={{ duration: 0.3 }}
                        className="flex-shrink-0"
                      >
                        <CheckCircle className={`w-6 h-6 ${openFAQ === index ? 'text-purple-500' : 'text-gray-400'}`} />
                      </motion.div>
                    </div>
                  </button>
                  
                  {openFAQ === index && (
                    <motion.div
                      initial={{ height: 0, opacity: 0 }}
                      animate={{ height: "auto", opacity: 1 }}
                      exit={{ height: 0, opacity: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="px-8 pb-6 border-t border-gray-200">
                        <p className="text-text-secondary leading-relaxed pt-4">
                          {faq.answer}
                        </p>
                      </div>
                    </motion.div>
                  )}
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20 bg-gradient-to-br from-purple-50 to-blue-50">
          <div className="container mx-auto px-6 text-center">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="max-w-4xl mx-auto"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é <span className="text-purple-500">GPT-—Ä–µ–≤–æ–ª—é—Ü–∏–∏</span>
              </h2>
              <p className="text-xl text-text-secondary mb-8 max-w-3xl mx-auto">
                –ú–∏–ª–ª–∏–æ–Ω—ã –ª—é–¥–µ–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç GPT –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. 
                –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href="/ai-services" className="inline-flex items-center px-8 py-4 bg-purple-500 text-white rounded-xl hover:bg-purple-600 transition-colors font-semibold">
                  –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                </Link>
                <Link href="/free-neural-networks" className="inline-flex items-center px-8 py-4 border-2 border-purple-500 text-purple-500 rounded-xl hover:bg-purple-500 hover:text-white transition-colors font-semibold">
                  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ò–ò
                </Link>
              </div>
            </motion.div>
          </div>
        </section>
      </div>
    </>
  )
} 