'use client'

import React, { useState, useEffect } from 'react'
import Link from 'next/link'
import { MessageCircle, Brain, Zap, Heart, Star, TrendingUp, CheckCircle, Clock, Award, Users, Lightbulb, ExternalLink } from 'lucide-react'
import { AIServiceWithCategory } from '@/lib/supabase'
import ServiceCard from '@/app/components/ServiceCard'

const benefits = [
  {
    icon: 'üß†',
    title: '–£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã',
    description: '–ü–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–µ –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã'
  },
  {
    icon: '‚ö°',
    title: '–ë—ã—Å—Ç—Ä–æ 24/7',
    description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –¥–Ω—è –∏ –Ω–æ—á–∏'
  },
  {
    icon: 'üí¨',
    title: '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ',
    description: '–û–±—â–∞–π—Ç–µ—Å—å –∫–∞–∫ —Å –∂–∏–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ'
  },
  {
    icon: 'üéØ',
    title: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è',
    description: '–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã, —É—á–µ–±—ã, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π'
  }
]

const topChatServices = [
  {
    name: 'ChatGPT',
    description: '–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Ç OpenAI –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á',
    category: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π',
    rating: 4.8,
    pricing: 'Freemium',
    monthlyPrice: '–æ—Ç $20/–º–µ—Å',
    url: 'https://chat.openai.com',
    features: ['GPT-4', '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ', '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π', '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞'],
    pros: ['–û—á–µ–Ω—å —É–º–Ω—ã–π', '–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã', '–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π'],
    cons: ['–ü–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏']
  },
  {
    name: 'Claude (Anthropic)',
    description: '–≠—Ç–∏—á–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è',
    category: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ò–ò',
    rating: 4.7,
    pricing: 'Freemium',
    monthlyPrice: '–æ—Ç $20/–º–µ—Å',
    url: 'https://claude.ai',
    features: ['–ë–æ–ª—å—à–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç', '–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–≠—Ç–∏—á–Ω–æ—Å—Ç—å'],
    pros: ['–û—á–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π', '–ü–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç', '–≠—Ç–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã'],
    cons: ['–ú–µ–¥–ª–µ–Ω–Ω–µ–µ ChatGPT', '–ú–µ–Ω—å—à–µ —Ñ—É–Ω–∫—Ü–∏–π']
  },
  {
    name: 'Character.AI',
    description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ –æ–±—â–∞–π—Ç–µ—Å—å —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ò–ò-–ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏',
    category: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
    rating: 4.5,
    pricing: 'Freemium',
    monthlyPrice: '–æ—Ç $9.99/–º–µ—Å',
    url: 'https://character.ai',
    features: ['–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π', '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã', '–ì–æ–ª–æ—Å–æ–≤—ã–µ —á–∞—Ç—ã', '–°–æ–æ–±—â–µ—Å—Ç–≤–æ'],
    pros: ['–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏', '–í–µ—Å–µ–ª–æ', '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è'],
    cons: ['–ò–Ω–æ–≥–¥–∞ –Ω–µ—Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏']
  },
  {
    name: 'Poe by Quora',
    description: '–î–æ—Å—Ç—É–ø –∫ –º–Ω–æ–∂–µ—Å—Ç–≤—É –ò–ò-–º–æ–¥–µ–ª–µ–π –≤ –æ–¥–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
    category: '–ú—É–ª—å—Ç–∏-–ò–ò',
    rating: 4.3,
    pricing: 'Freemium',
    monthlyPrice: '–æ—Ç $19.99/–º–µ—Å',
    url: 'https://poe.com',
    features: ['–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–µ–π', 'GPT-4', 'Claude', 'Llama'],
    pros: ['–ú–Ω–æ–≥–æ –ò–ò –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ', '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤', '–£–¥–æ–±–Ω–æ'],
    cons: ['–ü–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞', '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω—ã–º']
  },
  {
    name: 'Perplexity AI',
    description: '–ò–ò-–ø–æ–∏—Å–∫–æ–≤–∏–∫ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –∏ —Ç–æ—á–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏',
    category: '–ü–æ–∏—Å–∫',
    rating: 4.6,
    pricing: 'Freemium',
    monthlyPrice: '–æ—Ç $20/–º–µ—Å',
    url: 'https://perplexity.ai',
    features: ['–ü–æ–∏—Å–∫ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏', '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'],
    pros: ['–í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏', '–¢–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã'],
    cons: ['–§–æ–∫—É—Å —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ–∏—Å–∫–µ', '–ú–µ–Ω–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π']
  },
  {
    name: 'Google Bard',
    description: '–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç Google —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É',
    category: '–ü–æ–∏—Å–∫',
    rating: 4.2,
    pricing: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
    monthlyPrice: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
    url: 'https://bard.google.com',
    features: ['–ü–æ–∏—Å–∫ Google', 'Gmail –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', 'Gemini Pro', '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'],
    pros: ['–ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π', '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google', '–ë—ã—Å—Ç—Ä—ã–π'],
    cons: ['–ú–µ–Ω–µ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å']
  }
]

const categories = [
  {
    name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ò–ò',
    description: '–ü–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á',
    icon: 'ü§ñ',
    count: 15
  },
  {
    name: '–ü–æ–∏—Å–∫ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
    description: '–ò–ò –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
    icon: 'üîç',
    count: 8
  },
  {
    name: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç',
    description: '–ü–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
    icon: '‚ú®',
    count: 12
  },
  {
    name: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–¥–∞',
    description: '–ò–ò –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
    icon: 'üíª',
    count: 10
  }
]

export default function AIChatPage() {
  const [services, setServices] = useState<AIServiceWithCategory[]>([])
  const [loading, setLoading] = useState(true)

  const fetchChatServices = async () => {
    try {
      const response = await fetch('/api/ai-services?category=chatbots&limit=20')
      if (response.ok) {
        const data = await response.json()
        setServices(data.data || [])
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç-–±–æ—Ç–æ–≤:', error)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchChatServices()
  }, [])

  return (
    <div className="min-h-screen bg-background">
      {/* Breadcrumbs */}
      <nav className="container mx-auto px-6 py-4">
        <ol className="flex items-center space-x-2 text-sm text-text-secondary">
          <li><Link href="/" className="hover:text-accent-primary">–ì–ª–∞–≤–Ω–∞—è</Link></li>
          <li className="mx-2">/</li>
          <li><Link href="/ai-services" className="hover:text-accent-primary">–ö–∞—Ç–∞–ª–æ–≥</Link></li>
          <li className="mx-2">/</li>
          <li><span className="text-text-primary">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span></li>
        </ol>
      </nav>

      {/* Hero Section */}
      <section className="relative overflow-hidden bg-gradient-to-br from-green-50 via-white to-blue-50">
        <div className="absolute inset-0 bg-grid-pattern opacity-5"></div>
        <div className="relative container mx-auto px-6 py-20">
          <div className="text-center max-w-5xl mx-auto">
            <div className="flex items-center justify-center gap-2 mb-6">
              <MessageCircle className="w-8 h-8 text-green-500" />
              <span className="text-green-500 font-semibold">
                –ò–ò —á–∞—Ç-–±–æ—Ç—ã
              </span>
            </div>
            
            <h1 className="text-4xl md:text-6xl font-bold text-text-primary mb-6">
              –ò–ò <span className="text-gradient bg-gradient-to-r from-green-500 to-blue-600 bg-clip-text text-transparent">—á–∞—Ç-–±–æ—Ç—ã</span> ‚Äî<br className="hidden md:block" />
              –ª—É—á—à–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è
            </h1>
            
            <p className="text-xl text-text-secondary mb-8 leading-relaxed max-w-4xl mx-auto">
              –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —É–º–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤. –û—Ç ChatGPT –¥–æ Character.AI ‚Äî 
              –≤—ã–±–∏—Ä–∞–π—Ç–µ –ª—É—á—à–∏–µ –ò–ò-—á–∞—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã, —É—á–µ–±—ã, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á.
            </p>
            
            <div className="flex items-center justify-center gap-6 text-sm text-text-secondary mb-8">
              <div className="flex items-center gap-2">
                <Brain className="w-4 h-4 text-green-500" />
                <span>–£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã</span>
              </div>
              <div className="flex items-center gap-2">
                <Zap className="w-4 h-4 text-blue-500" />
                <span>–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ 24/7</span>
              </div>
              <div className="flex items-center gap-2">
                <Heart className="w-4 h-4 text-pink-500" />
                <span>–ü–æ–Ω–∏–º–∞—é—Ç —ç–º–æ—Ü–∏–∏</span>
              </div>
            </div>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href="#services" className="inline-flex items-center px-8 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors font-semibold">
                –°–º–æ—Ç—Ä–µ—Ç—å —á–∞—Ç-–±–æ—Ç—ã
              </Link>
              <Link href="/ai-services" className="inline-flex items-center px-8 py-4 border-2 border-green-500 text-green-500 rounded-xl hover:bg-green-500 hover:text-white transition-colors font-semibold">
                –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* Benefits Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-text-primary mb-6">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span>?
            </h2>
            <p className="text-xl text-text-secondary max-w-3xl mx-auto">
              –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ò-—á–∞—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ –≤ —Ä–∞–±–æ—Ç–µ –∏ –∂–∏–∑–Ω–∏
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {benefits.map((benefit, index) => (
              <div
                key={index}
                className="text-center p-6"
              >
                <div className="text-4xl mb-4">{benefit.icon}</div>
                <h3 className="text-xl font-semibold text-text-primary mb-3">
                  {benefit.title}
                </h3>
                <p className="text-text-secondary leading-relaxed">
                  {benefit.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Top Services Section */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-text-primary mb-6">
              –õ—É—á—à–∏–µ <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span> 2025
            </h2>
            <p className="text-xl text-text-secondary max-w-3xl mx-auto">
              –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
            {topChatServices.map((service, index) => (
              <div
                key={index}
                className="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow border border-gray-100"
              >
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-xl font-bold text-text-primary">
                    {service.name}
                  </h3>
                  <div className="flex items-center gap-2">
                    <span className="px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm font-medium">
                      {service.category}
                    </span>
                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                      service.pricing === 'Freemium' 
                        ? 'bg-blue-100 text-blue-700'
                        : service.pricing === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'
                        ? 'bg-emerald-100 text-emerald-700'
                        : 'bg-orange-100 text-orange-700'
                    }`}>
                      {service.pricing}
                    </span>
                  </div>
                </div>
                
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center gap-2">
                    <div className="flex text-yellow-400">
                      {[...Array(5)].map((_, i) => (
                        <span key={i} className={i < Math.floor(service.rating) ? 'text-yellow-400' : 'text-gray-300'}>‚òÖ</span>
                      ))}
                    </div>
                    <span className="text-sm text-gray-600">{service.rating}</span>
                  </div>
                  <span className="text-sm font-medium text-green-600">
                    {service.monthlyPrice}
                  </span>
                </div>
                
                <p className="text-text-secondary mb-4 leading-relaxed">
                  {service.description}
                </p>
                
                <div className="flex flex-wrap gap-2 mb-4">
                  {service.features.map((feature, idx) => (
                    <span key={idx} className="px-2 py-1 bg-gray-100 text-gray-700 rounded-lg text-sm">
                      {feature}
                    </span>
                  ))}
                </div>

                <div className="space-y-3 mb-4">
                  <div>
                    <p className="text-sm font-medium text-green-600 mb-1">‚úÖ –ü–ª—é—Å—ã:</p>
                    <ul className="text-sm text-gray-600 space-y-1">
                      {service.pros.map((pro, idx) => (
                        <li key={idx}>‚Ä¢ {pro}</li>
                      ))}
                    </ul>
                  </div>
                  <div>
                    <p className="text-sm font-medium text-red-600 mb-1">‚ùå –ú–∏–Ω—É—Å—ã:</p>
                    <ul className="text-sm text-gray-600 space-y-1">
                      {service.cons.map((con, idx) => (
                        <li key={idx}>‚Ä¢ {con}</li>
                      ))}
                    </ul>
                  </div>
                </div>
                
                <a 
                  href={service.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="inline-flex items-center gap-2 text-green-500 hover:text-green-600 font-medium"
                >
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å <ExternalLink className="w-4 h-4" />
                </a>
              </div>
            ))}
          </div>

          <div className="text-center">
            <Link href="/ai-services" className="inline-flex items-center px-8 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors font-semibold">
              –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
            </Link>
          </div>
        </div>
      </section>

      {/* Categories Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-text-primary mb-6">
              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç–æ–≤</span>
            </h2>
            <p className="text-xl text-text-secondary max-w-3xl mx-auto">
              –ù–∞–π–¥–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –≤–∞—à–∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {categories.map((category, index) => (
              <div
                key={index}
                className="bg-gray-50 rounded-2xl p-6 hover:shadow-lg transition-shadow cursor-pointer"
              >
                <div className="text-4xl mb-4">{category.icon}</div>
                <h3 className="text-xl font-semibold text-text-primary mb-2">
                  {category.name}
                </h3>
                <p className="text-text-secondary mb-4">
                  {category.description}
                </p>
                <span className="text-sm font-medium text-green-600">
                  {category.count} —Å–µ—Ä–≤–∏—Å–æ–≤
                </span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* All Services Section */}
      <section id="services" className="py-20 bg-gray-50">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-text-primary mb-6">
              –í—Å–µ <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span> –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
            </h2>
            <p className="text-xl text-text-secondary max-w-3xl mx-auto">
              –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ò–ò-—á–∞—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∏ –æ—Ç–∑—ã–≤–∞–º–∏
            </p>
          </div>

          {loading ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {[...Array(6)].map((_, index) => (
                <div key={index} className="bg-white rounded-2xl p-6 animate-pulse">
                  <div className="w-full h-40 bg-gray-200 rounded-xl mb-4"></div>
                  <div className="h-4 bg-gray-200 rounded mb-2"></div>
                  <div className="h-4 bg-gray-200 rounded w-2/3"></div>
                </div>
              ))}
            </div>
          ) : services.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {services.map((service, index) => (
                <ServiceCard 
                  key={service.id}
                  index={index}
                  {...service}
                />
              ))}
            </div>
          ) : (
            <div className="text-center py-16">
              <MessageCircle size={48} className="mx-auto text-gray-300 mb-4" />
              <h3 className="text-xl font-medium text-text-primary mb-2">–ß–∞—Ç-–±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-text-secondary mb-6">
                –ü–æ–∫–∞ —á—Ç–æ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
              </p>
              <Link href="/ai-services" className="px-6 py-3 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors">
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
              </Link>
            </div>
          )}
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-green-500 to-blue-600">
        <div className="container mx-auto px-6 text-center">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl font-bold text-white mb-6">
              –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –ò–ò —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
            </h2>
            <p className="text-xl text-white/90 mb-8 leading-relaxed">
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ 
              –≤ —Ä–∞–±–æ—Ç–µ, —É—á–µ–±–µ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ. –ë—É–¥—É—â–µ–µ –æ–±—â–µ–Ω–∏—è —É–∂–µ –∑–¥–µ—Å—å!
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href="/ai-services?category=chatbots">
                <button className="bg-white text-green-500 px-8 py-4 rounded-xl font-semibold hover:bg-gray-50 transition-colors shadow-lg">
                  –í—Å–µ —á–∞—Ç-–±–æ—Ç—ã
                </button>
              </Link>
              <Link href="/ai-services">
                <button className="bg-white/20 backdrop-blur-sm text-white border border-white/30 px-8 py-4 rounded-xl font-semibold hover:bg-white/30 transition-colors">
                  –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
                </button>
              </Link>
            </div>
          </div>
        </div>
      </section>
    </div>
  )
} 