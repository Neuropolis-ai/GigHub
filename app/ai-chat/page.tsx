'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import Link from 'next/link'
import { Search, CheckCircle, Users, ExternalLink, MessageCircle, Sparkles, TrendingUp, Clock, Bot, Zap, Brain, Heart } from 'lucide-react'
import ServiceCard from '@/app/components/ServiceCard'
import { AIServiceWithCategory } from '@/lib/supabase'

const chatCapabilities = [
  {
    icon: MessageCircle,
    title: "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ",
    description: "–û–±—â–µ–Ω–∏–µ –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º —è–∑—ã–∫–µ —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ—Ü–∏–π"
  },
  {
    icon: Brain,
    title: "–ì–ª—É–±–æ–∫–∏–µ –∑–Ω–∞–Ω–∏—è",
    description: "–î–æ—Å—Ç—É–ø –∫ –æ–±—à–∏—Ä–Ω–æ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
  },
  {
    icon: Zap,
    title: "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã",
    description: "–ë—ã—Å—Ç—Ä—ã–µ –∏ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã 24/7"
  },
  {
    icon: Bot,
    title: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è",
    description: "–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á: –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
  }
]

const topChatServices = [
  {
    name: "ChatGPT",
    description: "–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ò–ò-—á–∞—Ç –≤ –º–∏—Ä–µ –æ—Ç OpenAI. –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞–µ—Ç —Å —Ä–∞–±–æ—Ç–æ–π, —É—á–µ–±–æ–π –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º.",
    category: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π",
    pricing: "Freemium",
    features: ["GPT-4", "–í–µ–±-–ø–æ–∏—Å–∫", "–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤", "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ"],
    url: "https://chat.openai.com",
    rating: 4.8,
    monthlyPrice: "$0-20",
    pros: ["–õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤", "–û–≥—Ä–æ–º–Ω–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å", "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"],
    cons: ["–û—á–µ—Ä–µ–¥–∏ –≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏", "–ò–Ω–æ–≥–¥–∞ –Ω–µ—Ç–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
  },
  {
    name: "Claude",
    description: "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç Anthropic —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —ç—Ç–∏—á–Ω–æ—Å—Ç—å. –û—Ç–ª–∏—á–Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –Ω—é–∞–Ω—Å—ã.",
    category: "–≠—Ç–∏—á–Ω—ã–π –ò–ò",
    pricing: "Freemium",
    features: ["–ë–æ–ª—å—à–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç", "–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å"],
    url: "https://claude.ai",
    rating: 4.7,
    monthlyPrice: "$0-20",
    pros: ["–û—á–µ–Ω—å —á–µ—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã", "–û—Ç–ª–∏—á–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", "–í—ã—Å–æ–∫–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"],
    cons: ["–ú–µ–Ω—å—à–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–ë–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π"]
  },
  {
    name: "Character.AI",
    description: "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ–±—â–µ–Ω–∏—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ò–ò-–ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π.",
    category: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
    pricing: "Freemium",
    features: ["–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π", "–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã", "–ì—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã", "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è"],
    url: "https://character.ai",
    rating: 4.5,
    monthlyPrice: "$0-10",
    pros: ["–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏", "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏", "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"],
    cons: ["–§–æ–∫—É—Å –Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "–ú–µ–Ω–µ–µ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã"]
  },
  {
    name: "Poe",
    description: "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ—Ç Quora, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∞—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ò–ò-–º–æ–¥–µ–ª–µ–π –≤ –æ–¥–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ. –î–æ—Å—Ç—É–ø –∫ GPT-4, Claude, Gemini –∏ –¥—Ä—É–≥–∏–º.",
    category: "–ú—É–ª—å—Ç–∏–º–æ–¥–µ–ª—å",
    pricing: "Freemium",
    features: ["–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–µ–π", "–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤", "API", "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤"],
    url: "https://poe.com",
    rating: 4.4,
    monthlyPrice: "$0-20",
    pros: ["–î–æ—Å—Ç—É–ø –∫–æ –º–Ω–æ–≥–∏–º –º–æ–¥–µ–ª—è–º", "–£–¥–æ–±–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ", "–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–∏—Ö –±–æ—Ç–æ–≤"],
    cons: ["–°–ª–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞", "–ù–µ –≤—Å–µ –º–æ–¥–µ–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã"]
  },
  {
    name: "Google Bard",
    description: "–ò–ò-—á–∞—Ç –æ—Ç Google –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ Gemini. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏ Google –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
    category: "–ü–æ–∏—Å–∫–æ–≤—ã–π",
    pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    features: ["–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google", "–í–µ–±-–ø–æ–∏—Å–∫", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"],
    url: "https://bard.google.com",
    rating: 4.3,
    monthlyPrice: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    pros: ["–ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π", "–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google"],
    cons: ["–ú–µ–Ω—å—à–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π", "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"]
  },
  {
    name: "Bing Chat",
    description: "–ò–ò-—á–∞—Ç –æ—Ç Microsoft, –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫ Bing. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT-4 –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.",
    category: "–ü–æ–∏—Å–∫–æ–≤—ã–π",
    pricing: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    features: ["GPT-4", "–í–µ–±-–ø–æ–∏—Å–∫", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Edge"],
    url: "https://bing.com/chat",
    rating: 4.2,
    monthlyPrice: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    pros: ["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π GPT-4", "–í–µ–±-–ø–æ–∏—Å–∫", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"],
    cons: ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã", "–ü—Ä–∏–≤—è–∑–∫–∞ –∫ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ Microsoft"]
  }
]

const useCases = [
  {
    title: "–ë–∏–∑–Ω–µ—Å –∏ —Ä–∞–±–æ—Ç–∞",
    description: "–ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ä–∞–±–æ—á–∏—Ö –∑–∞–¥–∞—á, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö",
    tools: ["ChatGPT", "Claude", "Poe"],
    icon: "üíº",
    examples: ["–ù–∞–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Å–µ–º", "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤", "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á"]
  },
  {
    title: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ",
    description: "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º, –ø–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ –∏ –∏–∑—É—á–µ–Ω–∏–µ–º —è–∑—ã–∫–æ–≤",
    tools: ["ChatGPT", "Claude", "Google Bard"],
    icon: "üéì",
    examples: ["–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á", "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π", "–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º"]
  },
  {
    title: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤, –∏–¥–µ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
    tools: ["ChatGPT", "Character.AI", "Poe"],
    icon: "üé®",
    examples: ["–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π", "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", "–ü–æ—ç–∑–∏—è –∏ –ø—Ä–æ–∑–∞"]
  },
  {
    title: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –æ–±—â–µ–Ω–∏–µ",
    description: "Casual-–±–µ—Å–µ–¥—ã, –∏–≥—Ä—ã, —Ä–æ–ª–µ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏ –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
    tools: ["Character.AI", "ChatGPT", "Poe"],
    icon: "üéÆ",
    examples: ["–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –±–µ—Å–µ–¥—ã", "–ò–≥—Ä—ã –≤ —Å–ª–æ–≤–∞", "–®—É—Ç–∫–∏ –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã"]
  }
]

const benefits = [
  {
    title: "–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å 24/7",
    description: "–ò–ò-—á–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö –∏ –æ—Ç–ø—É—Å–∫–æ–≤",
    icon: "üïí"
  },
  {
    title: "–ë–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è",
    description: "–î–æ—Å—Ç—É–ø –∫ –æ–≥—Ä–æ–º–Ω—ã–º –æ–±—ä–µ–º–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π",
    icon: "üß†"
  },
  {
    title: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
    description: "–ê–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏",
    icon: "üë§"
  },
  {
    title: "–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å",
    description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–µ—Å—è—Ç–∫–æ–≤ —è–∑—ã–∫–æ–≤ –≤–∫–ª—é—á–∞—è —Ä—É—Å—Å–∫–∏–π",
    icon: "üåç"
  }
]

const faqData = [
  {
    question: "–ö–∞–∫–æ–π –ò–ò-—á–∞—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã?",
    answer: "ChatGPT –∏ Claude —Å—á–∏—Ç–∞—é—Ç—Å—è –ª—É—á—à–∏–º–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á. ChatGPT –±–æ–ª–µ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –∏ –∫—Ä–µ–∞—Ç–∏–≤–µ–Ω, Claude –±–æ–ª–µ–µ —Ç–æ—á–µ–Ω –∏ —ç—Ç–∏—á–µ–Ω. –î–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Poe –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–Ω—ã–º –º–æ–¥–µ–ª—è–º."
  },
  {
    question: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –¥–µ–ª–∏—Ç—å—Å—è –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å –ò–ò-—á–∞—Ç–∞–º–∏?",
    answer: "–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (–ø–∞—Ä–æ–ª–∏, –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç, –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ). –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π. –í—Å–µ–≥–¥–∞ —á–∏—Ç–∞–π—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏."
  },
  {
    question: "–ú–æ–≥—É—Ç –ª–∏ –ò–ò-—á–∞—Ç—ã –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ?",
    answer: "–ò–ò-—á–∞—Ç—ã –æ—Ç–ª–∏—á–Ω–æ –¥–æ–ø–æ–ª–Ω—è—é—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é. –û–Ω–∏ –∏–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–º–æ—â–∏ –≤ —Ä–∞–±–æ—Ç–µ –∏ casual-–æ–±—â–µ–Ω–∏—è, –Ω–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è —ç–º–ø–∞—Ç–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å—Ç–∞—é—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏."
  },
  {
    question: "–ö–∞–∫–∏–µ –ò–ò-—á–∞—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ?",
    answer: "–ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã: Google Bard –∏ Bing Chat. –ß–∞—Å—Ç–∏—á–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏: ChatGPT (GPT-3.5), Claude, Character.AI, Poe. Premium-–≤–µ—Ä—Å–∏–∏ –æ–±—ã—á–Ω–æ —Å—Ç–æ—è—Ç $10-20/–º–µ—Å—è—Ü."
  },
  {
    question: "–ü–æ–Ω–∏–º–∞—é—Ç –ª–∏ –ò–ò-—á–∞—Ç—ã —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫?",
    answer: "–î–∞, –≤—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ò–ò-—á–∞—Ç—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç –∏ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. ChatGPT, Claude, Bard –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –ø–æ–Ω–∏–º–∞—é—Ç –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Å–ª–µ–Ω–≥."
  },
  {
    question: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ò–ò-—á–∞—Ç—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –¥–µ—Ç–µ–π?",
    answer: "–î–∞, –Ω–æ –ø–æ–¥ –ø—Ä–∏—Å–º–æ—Ç—Ä–æ–º –≤–∑—Ä–æ—Å–ª—ã—Ö. –ò–ò-—á–∞—Ç—ã –æ—Ç–ª–∏—á–Ω–æ –æ–±—ä—è—Å–Ω—è—é—Ç —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø–æ–º–æ–≥–∞—é—Ç —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏. –í–∞–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –æ–±—â–µ–Ω–∏—è."
  },
  {
    question: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –ò–ò-—á–∞—Ç –¥–ª—è —Å–≤–æ–∏—Ö –∑–∞–¥–∞—á?",
    answer: "–î–ª—è —Ä–∞–±–æ—Ç—ã –∏ —É—á–µ–±—ã - ChatGPT –∏–ª–∏ Claude. –î–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π - Character.AI. –î–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - Google Bard –∏–ª–∏ Bing Chat. –î–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ - Poe."
  }
]

export default function AIChatPage() {
  const [services, setServices] = useState<AIServiceWithCategory[]>([])
  const [loading, setLoading] = useState(true)
  const [searchTerm, setSearchTerm] = useState('')
  const [openFAQ, setOpenFAQ] = useState<number | null>(null)

  useEffect(() => {
    fetchChatServices()
  }, [searchTerm])

  const fetchChatServices = async () => {
    try {
      setLoading(true)
      const params = new URLSearchParams({
        page: '1',
        limit: '20',
        sort: 'bookmarks_count',
        order: 'desc'
      })

      if (searchTerm) params.append('search', searchTerm)

      const response = await fetch(`/api/ai-services?${params}`)
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö')

      const data = await response.json()
      setServices(data.data || [])
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error)
      setServices([])
    } finally {
      setLoading(false)
    }
  }

  return (
    <>
      {/* JSON-LD —Ä–∞–∑–º–µ—Ç–∫–∞ */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "WebPage",
            "name": "–ò–ò —á–∞—Ç-–±–æ—Ç—ã ‚Äî –ª—É—á—à–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è",
            "description": "–¢–æ–ø —á–∞—Ç-–±–æ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, –æ–±—É—á–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π",
            "url": "https://gighub.ru/ai-chat",
            "mainEntity": {
              "@type": "FAQPage",
              "mainEntity": faqData.map((faq) => ({
                "@type": "Question",
                "name": faq.question,
                "acceptedAnswer": {
                  "@type": "Answer",
                  "text": faq.answer
                }
              }))
            }
          })
        }}
      />

      <div className="min-h-screen bg-background">
        {/* Breadcrumbs */}
        <nav className="container mx-auto px-6 py-4">
          <ol className="flex items-center space-x-2 text-sm text-text-secondary">
            <li><Link href="/" className="hover:text-accent-primary">–ì–ª–∞–≤–Ω–∞—è</Link></li>
            <li className="mx-2">/</li>
            <li><span className="text-text-primary">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span></li>
          </ol>
        </nav>

        {/* Hero Section */}
        <section className="relative overflow-hidden bg-gradient-to-br from-green-50 via-white to-blue-50 pt-8">
          <div className="absolute inset-0 bg-grid-pattern opacity-5"></div>
          <div className="relative container mx-auto px-6 py-16">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="text-center max-w-5xl mx-auto"
            >
              <div className="flex items-center justify-center gap-2 mb-6">
                <MessageCircle className="w-8 h-8 text-green-500" />
                <span className="text-green-500 font-semibold">
                  –ò–ò —á–∞—Ç-–±–æ—Ç—ã
                </span>
              </div>
              
              <h1 className="text-4xl md:text-6xl font-bold text-text-primary mb-6">
                –ò–ò <span className="text-gradient bg-gradient-to-r from-green-500 to-blue-600 bg-clip-text text-transparent">—á–∞—Ç-–±–æ—Ç—ã</span> ‚Äî<br className="hidden md:block" />
                –ª—É—á—à–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è
              </h1>
              
              <p className="text-xl text-text-secondary mb-8 leading-relaxed max-w-4xl mx-auto">
                –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —É–º–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤. –û—Ç ChatGPT –¥–æ Character.AI ‚Äî 
                –≤—ã–±–∏—Ä–∞–π—Ç–µ –ª—É—á—à–∏–µ –ò–ò-—á–∞—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã, —É—á–µ–±—ã, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ —Ä–µ—à–µ–Ω–∏—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á.
              </p>
              
              <div className="flex items-center justify-center gap-6 text-sm text-text-secondary mb-8">
                <div className="flex items-center gap-2">
                  <Brain className="w-4 h-4 text-green-500" />
                  <span>–£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã</span>
                </div>
                <div className="flex items-center gap-2">
                  <Zap className="w-4 h-4 text-blue-500" />
                  <span>–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ 24/7</span>
                </div>
                <div className="flex items-center gap-2">
                  <Heart className="w-4 h-4 text-pink-500" />
                  <span>–ü–æ–Ω–∏–º–∞—é—Ç —ç–º–æ—Ü–∏–∏</span>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href="#services" className="inline-flex items-center px-8 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors font-semibold">
                  –°–º–æ—Ç—Ä–µ—Ç—å —á–∞—Ç-–±–æ—Ç—ã
                </Link>
                <Link href="/ai-services" className="inline-flex items-center px-8 py-4 border-2 border-green-500 text-green-500 rounded-xl hover:bg-green-500 hover:text-white transition-colors font-semibold">
                  –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
                </Link>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Benefits Section */}
        <section className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span>?
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ò-—á–∞—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ –≤ —Ä–∞–±–æ—Ç–µ –∏ –∂–∏–∑–Ω–∏
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {benefits.map((benefit, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="text-center p-6"
                >
                  <div className="text-4xl mb-4">{benefit.icon}</div>
                  <h3 className="text-xl font-semibold text-text-primary mb-3">
                    {benefit.title}
                  </h3>
                  <p className="text-text-secondary leading-relaxed">
                    {benefit.description}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Top Services Section */}
        <section className="py-20 bg-gray-50">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –õ—É—á—à–∏–µ <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç—ã</span> 2025
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
              {topChatServices.map((service, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow border border-gray-100"
                >
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-text-primary">
                      {service.name}
                    </h3>
                    <div className="flex items-center gap-2">
                      <span className="px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm font-medium">
                        {service.category}
                      </span>
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        service.pricing === 'Freemium' 
                          ? 'bg-blue-100 text-blue-700'
                          : service.pricing === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'
                          ? 'bg-emerald-100 text-emerald-700'
                          : 'bg-orange-100 text-orange-700'
                      }`}>
                        {service.pricing}
                      </span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between mb-3">
                    <div className="flex items-center gap-2">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className={i < Math.floor(service.rating) ? 'text-yellow-400' : 'text-gray-300'}>‚òÖ</span>
                        ))}
                      </div>
                      <span className="text-sm text-gray-600">{service.rating}</span>
                    </div>
                    <span className="text-sm font-medium text-green-600">
                      {service.monthlyPrice}
                    </span>
                  </div>
                  
                  <p className="text-text-secondary mb-4 leading-relaxed">
                    {service.description}
                  </p>
                  
                  <div className="flex flex-wrap gap-2 mb-4">
                    {service.features.map((feature, idx) => (
                      <span key={idx} className="px-2 py-1 bg-gray-100 text-gray-700 rounded-lg text-sm">
                        {feature}
                      </span>
                    ))}
                  </div>

                  <div className="space-y-3 mb-4">
                    <div>
                      <p className="text-sm font-medium text-green-600 mb-1">‚úÖ –ü–ª—é—Å—ã:</p>
                      <ul className="text-sm text-gray-600 space-y-1">
                        {service.pros.map((pro, idx) => (
                          <li key={idx}>‚Ä¢ {pro}</li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-red-600 mb-1">‚ùå –ú–∏–Ω—É—Å—ã:</p>
                      <ul className="text-sm text-gray-600 space-y-1">
                        {service.cons.map((con, idx) => (
                          <li key={idx}>‚Ä¢ {con}</li>
                        ))}
                      </ul>
                    </div>
                  </div>
                  
                  <a 
                    href={service.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex items-center gap-2 text-green-500 hover:text-green-600 font-medium"
                  >
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å <ExternalLink className="w-4 h-4" />
                  </a>
                </motion.div>
              ))}
            </div>

            <div className="text-center">
              <Link href="/ai-services" className="inline-flex items-center px-8 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors font-semibold">
                –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
              </Link>
            </div>
          </div>
        </section>

        {/* Use Cases Section */}
        <section className="py-20 bg-white">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –°—Ñ–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç–æ–≤</span>
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫–∏–µ —á–∞—Ç-–±–æ—Ç—ã –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {useCases.map((useCase, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-gray-50 rounded-2xl p-6 hover:shadow-lg transition-shadow"
                >
                  <div className="text-4xl mb-4">{useCase.icon}</div>
                  <h3 className="text-xl font-bold text-text-primary mb-3">
                    {useCase.title}
                  </h3>
                  <p className="text-text-secondary mb-4 leading-relaxed">
                    {useCase.description}
                  </p>
                  <div className="space-y-2 mb-4">
                    <p className="text-sm font-medium text-gray-700">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —á–∞—Ç-–±–æ—Ç—ã:</p>
                    <div className="flex flex-wrap gap-2">
                      {useCase.tools.map((tool, idx) => (
                        <span key={idx} className="px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm font-medium">
                          {tool}
                        </span>
                      ))}
                    </div>
                  </div>
                  <div className="space-y-2">
                    <p className="text-sm font-medium text-gray-700">–ü—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á:</p>
                    <div className="grid grid-cols-1 gap-1">
                      {useCase.examples.map((example, idx) => (
                        <span key={idx} className="text-sm text-gray-600">‚Ä¢ {example}</span>
                      ))}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Services Catalog Section */}
        <section id="services" className="py-20 bg-gray-50">
          <div className="container mx-auto px-6">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç–æ–≤</span>
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ò–ò-—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–∑ –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
              </p>
            </motion.div>

            {/* Search */}
            <div className="max-w-md mx-auto mb-12">
              <div className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –ò–ò —á–∞—Ç-–±–æ—Ç–æ–≤..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-12 pr-4 py-4 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200"
                />
              </div>
            </div>

            {/* Services Grid */}
            {loading ? (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {[...Array(6)].map((_, index) => (
                  <div key={index} className="bg-white rounded-3xl shadow-lg p-6 animate-pulse">
                    <div className="h-48 bg-gray-200 rounded-xl mb-4"></div>
                    <div className="h-4 bg-gray-200 rounded mb-2"></div>
                    <div className="h-4 bg-gray-200 rounded w-3/4 mb-4"></div>
                    <div className="h-3 bg-gray-200 rounded mb-2"></div>
                    <div className="h-3 bg-gray-200 rounded w-2/3"></div>
                  </div>
                ))}
              </div>
            ) : services.length > 0 ? (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4, duration: 0.6 }}
                className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
              >
                {services.map((service, index) => (
                  <ServiceCard
                    key={service.id}
                    {...service}
                    index={index}
                  />
                ))}
              </motion.div>
            ) : (
              <div className="text-center py-20">
                <div className="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                  <Search className="w-12 h-12 text-gray-400" />
                </div>
                <h3 className="text-2xl font-bold text-text-primary mb-4">
                  –°–µ—Ä–≤–∏—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </h3>
                <p className="text-text-secondary mb-8 max-w-md mx-auto">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –ø–æ–ª–Ω–æ–º—É –∫–∞—Ç–∞–ª–æ–≥—É
                </p>
                <Link href="/ai-services" className="inline-flex items-center px-6 py-3 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors">
                  –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                </Link>
              </div>
            )}
          </div>
        </section>

        {/* FAQ Section */}
        <section className="py-20 bg-white">
          <div className="container mx-auto px-6 max-w-4xl">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center mb-16"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –í–æ–ø—Ä–æ—Å—ã –æ–± <span className="text-green-500">–ò–ò —á–∞—Ç-–±–æ—Ç–∞—Ö</span>
              </h2>
              <p className="text-xl text-text-secondary max-w-3xl mx-auto">
                –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ò–ò-—á–∞—Ç–∞—Ö –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
              </p>
            </motion.div>

            <div className="space-y-4">
              {faqData.map((faq, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-gray-50 rounded-2xl shadow-lg border border-gray-100 overflow-hidden"
                >
                  <button
                    onClick={() => setOpenFAQ(openFAQ === index ? null : index)}
                    className="w-full px-8 py-6 text-left hover:bg-gray-100 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-inset"
                  >
                    <div className="flex items-center justify-between">
                      <h3 className="text-lg font-semibold text-text-primary pr-4">
                        {faq.question}
                      </h3>
                      <motion.div
                        animate={{ rotate: openFAQ === index ? 180 : 0 }}
                        transition={{ duration: 0.3 }}
                        className="flex-shrink-0"
                      >
                        <CheckCircle className={`w-6 h-6 ${openFAQ === index ? 'text-green-500' : 'text-gray-400'}`} />
                      </motion.div>
                    </div>
                  </button>
                  
                  {openFAQ === index && (
                    <motion.div
                      initial={{ height: 0, opacity: 0 }}
                      animate={{ height: "auto", opacity: 1 }}
                      exit={{ height: 0, opacity: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="px-8 pb-6 border-t border-gray-200">
                        <p className="text-text-secondary leading-relaxed pt-4">
                          {faq.answer}
                        </p>
                      </div>
                    </motion.div>
                  )}
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20 bg-gradient-to-br from-green-50 to-blue-50">
          <div className="container mx-auto px-6 text-center">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="max-w-4xl mx-auto"
            >
              <h2 className="text-4xl font-bold text-text-primary mb-6">
                –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å <span className="text-green-500">–ª—É—á—à–∏–º–∏ –ò–ò</span> —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
              </h2>
              <p className="text-xl text-text-secondary mb-8 max-w-3xl mx-auto">
                –ú–∏–ª–ª–∏–æ–Ω—ã –ª—é–¥–µ–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ò–ò-—á–∞—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã, —É—á–µ–±—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π. 
                –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–º–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href="/ai-services" className="inline-flex items-center px-8 py-4 bg-green-500 text-white rounded-xl hover:bg-green-600 transition-colors font-semibold">
                  –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                </Link>
                <Link href="/free-neural-networks" className="inline-flex items-center px-8 py-4 border-2 border-green-500 text-green-500 rounded-xl hover:bg-green-500 hover:text-white transition-colors font-semibold">
                  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ò–ò
                </Link>
              </div>
            </motion.div>
          </div>
        </section>
      </div>
    </>
  )
} 