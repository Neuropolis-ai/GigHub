const fs = require('fs');

async function massImport() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...');
  
  // –ù–∞–π—Ç–∏ –≤—Å–µ —Ñ–∞–π–ª—ã –±–∞—Ç—á–µ–π
  const batchFiles = [];
  for (let i = 4; i <= 100; i++) {
    const filePath = `/Users/cursor/Desktop/GigHub/scripts/batch_${i}.sql`;
    if (fs.existsSync(filePath)) {
      batchFiles.push(filePath);
    }
  }
  
  console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${batchFiles.length} —Ñ–∞–π–ª–æ–≤ –±–∞—Ç—á–µ–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞`);
  
  let totalCommands = 0;
  let commandsToExecute = [];
  
  // –ß–∏—Ç–∞–µ–º –∫–∞–∂–¥—ã–π –±–∞—Ç—á –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
  for (const batchFile of batchFiles.slice(0, 20)) { // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 20 –±–∞—Ç—á–µ–π –¥–ª—è –Ω–∞—á–∞–ª–∞
    const content = fs.readFileSync(batchFile, 'utf-8');
    const commands = content.split('\n\n').filter(cmd => cmd.trim() && cmd.includes('INSERT'));
    
    commands.forEach(cmd => {
      // –£–ø—Ä–æ—â–∞–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ MCP
      const cleanCmd = cmd.replace(/\n/g, ' ').replace(/\s+/g, ' ').trim();
      if (cleanCmd.length > 0) {
        commandsToExecute.push(cleanCmd);
        totalCommands++;
      }
    });
  }
  
  console.log(`üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ ${totalCommands} –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–∞–π–ª –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const outputFile = '/Users/cursor/Desktop/GigHub/scripts/mass_import_commands.txt';
  fs.writeFileSync(outputFile, commandsToExecute.join('\n\n'));
  
  console.log(`‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${outputFile}`);
  console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ mcp_supabase_execute_sql');
  console.log('2. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');
  
  // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥
  console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:');
  commandsToExecute.slice(0, 3).forEach((cmd, index) => {
    console.log(`${index + 1}. ${cmd.substring(0, 200)}...`);
  });
  
  return {
    totalCommands,
    outputFile,
    commandsPreview: commandsToExecute.slice(0, 10)
  };
}

if (require.main === module) {
  massImport().catch(console.error);
}

module.exports = { massImport }; 