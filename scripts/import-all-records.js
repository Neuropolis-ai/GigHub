const fs = require('fs');

async function executeBatch() {
  console.log('üöÄ –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ CSV —Ñ–∞–π–ª–∞...');
  
  const sqlFile = '/Users/cursor/Desktop/GigHub/scripts/import_data.sql';
  
  if (!fs.existsSync(sqlFile)) {
    console.error(`‚ùå –§–∞–π–ª SQL –Ω–µ –Ω–∞–π–¥–µ–Ω: ${sqlFile}`);
    return;
  }
  
  const sqlContent = fs.readFileSync(sqlFile, 'utf-8');
  const sqlCommands = sqlContent.split('\n\n').filter(cmd => cmd.trim());
  
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${sqlCommands.length} SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
  
  // –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ MCP
  console.log('\nüìù SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ MCP Supabase:');
  console.log('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ mcp_supabase_execute_sql\n');
  
  sqlCommands.forEach((cmd, index) => {
    console.log(`--- –ö–æ–º–∞–Ω–¥–∞ ${index + 1} ---`);
    console.log(cmd.substring(0, 500) + (cmd.length > 500 ? '...' : ''));
    console.log('');
  });
  
  console.log(`\n‚úÖ –í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: ${sqlCommands.length}`);
  console.log('üí° –°–æ–≤–µ—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –±–∞—Ç—á–∞–º —á–µ—Ä–µ–∑ MCP –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏');
}

if (require.main === module) {
  executeBatch().catch(console.error);
}

module.exports = { executeBatch }; 